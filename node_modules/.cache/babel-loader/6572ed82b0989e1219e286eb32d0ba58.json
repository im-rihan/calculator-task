{"ast":null,"code":"var _jsxFileName = \"D:\\\\task\\\\calculator-task\\\\src\\\\componensts\\\\Calculator.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport \"./Calculator.css\";\nimport { btns, BTN_ACTIONS } from \"./btnConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calculator() {\n  _s();\n\n  const btnsRef = useRef(null);\n  const expRef = useRef(null);\n  const [expression, setExpression] = useState(\"\");\n  useEffect(() => {\n    const btns = Array.from(btnsRef.current.querySelectorAll(\"button\")); // console.log(btns);\n\n    btns.forEach(e => e.style.height = e.offsetWidth + \"px\");\n  }, []);\n\n  const themeChange = () => {\n    document.body.classList.toggle(\"dark\");\n  };\n\n  const addAnimSpan = content => {\n    const expDiv = expRef.current;\n    const span = document.createElement(\"span\");\n    span.innerHTML = content;\n    span.style.opacity = \"0\";\n    expDiv.appendChild(span);\n    const width = span.offsetWidth + \"px\";\n    span.style.width = \"0\";\n    setTimeout(() => {\n      span.style.opacity = \"1\";\n      span.style.width = width;\n    }, 100);\n  };\n\n  const btnClick = item => {\n    // console.log(item);\n    const expDiv = expRef.current;\n\n    if (item.action === BTN_ACTIONS.ADD) {\n      addAnimSpan(item.display);\n      const oper = item.display !== \"x\" ? item.display : \"*\";\n      setExpression(expression + oper);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"theme\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme__icon\",\n        onClick: themeChange,\n        children: \"\\u2600\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator__result\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: expRef,\n        className: \"calculator__result__exp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: btnsRef,\n      className: \"calculator__btns\",\n      children: btns.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: item.class,\n        onClick: () => btnClick(item),\n        children: item.display\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calculator, \"UntRR5+MHiCy/0HE140rPHViJH0=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["D:/task/calculator-task/src/componensts/Calculator.js"],"names":["useRef","useState","useEffect","btns","BTN_ACTIONS","Calculator","btnsRef","expRef","expression","setExpression","Array","from","current","querySelectorAll","forEach","e","style","height","offsetWidth","themeChange","document","body","classList","toggle","addAnimSpan","content","expDiv","span","createElement","innerHTML","opacity","appendChild","width","setTimeout","btnClick","item","action","ADD","display","oper","map","index","class"],"mappings":"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","sourcesContent":["import { useRef, useState, useEffect } from \"react\";\r\nimport \"./Calculator.css\";\r\nimport { btns, BTN_ACTIONS } from \"./btnConfig\";\r\n\r\nfunction Calculator() {\r\n  const btnsRef = useRef(null);\r\n  const expRef = useRef(null);\r\n  const [expression, setExpression] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const btns = Array.from(btnsRef.current.querySelectorAll(\"button\"));\r\n    // console.log(btns);\r\n    btns.forEach((e) => (e.style.height = e.offsetWidth + \"px\"));\r\n  }, []);\r\n\r\n  const themeChange = () => {\r\n    document.body.classList.toggle(\"dark\");\r\n  };\r\n\r\n  const addAnimSpan = (content) => {\r\n    const expDiv = expRef.current;\r\n    const span = document.createElement(\"span\");\r\n\r\n    span.innerHTML = content;\r\n    span.style.opacity = \"0\";\r\n    expDiv.appendChild(span);\r\n\r\n    const width = span.offsetWidth + \"px\";\r\n    span.style.width = \"0\";\r\n\r\n    setTimeout(() => {\r\n      span.style.opacity = \"1\";\r\n      span.style.width = width;\r\n    }, 100);\r\n  };\r\n\r\n  const btnClick = (item) => {\r\n    // console.log(item);\r\n    const expDiv = expRef.current;\r\n    if (item.action === BTN_ACTIONS.ADD) {\r\n      addAnimSpan(item.display);\r\n\r\n      const oper = item.display !== \"x\" ? item.display : \"*\";\r\n      setExpression(expression + oper);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"theme\">\r\n        <div className=\"theme__icon\" onClick={themeChange}>\r\n          ☀️\r\n        </div>\r\n      </div>\r\n      <div className=\"calculator__result\">\r\n        <div ref={expRef} className=\"calculator__result__exp\">\r\n        </div>\r\n      </div>\r\n      <div ref={btnsRef} className=\"calculator__btns\">\r\n        {btns.map((item, index) => (\r\n          <button\r\n            key={index}\r\n            className={item.class}\r\n            onClick={() => btnClick(item)}\r\n          >\r\n            {item.display}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}